#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace AnnualYouthWeekWebApplication
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="Annual_Youth_Week")]
	public partial class MyDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void InsertActivity(Activity instance);
    partial void UpdateActivity(Activity instance);
    partial void DeleteActivity(Activity instance);
    partial void InsertYear(Year instance);
    partial void UpdateYear(Year instance);
    partial void DeleteYear(Year instance);
    partial void InsertCompanion_type(Companion_type instance);
    partial void UpdateCompanion_type(Companion_type instance);
    partial void DeleteCompanion_type(Companion_type instance);
    partial void InsertFaculty(Faculty instance);
    partial void UpdateFaculty(Faculty instance);
    partial void DeleteFaculty(Faculty instance);
    partial void InsertField(Field instance);
    partial void UpdateField(Field instance);
    partial void DeleteField(Field instance);
    partial void InsertGeneral_Instructor_Type(General_Instructor_Type instance);
    partial void UpdateGeneral_Instructor_Type(General_Instructor_Type instance);
    partial void DeleteGeneral_Instructor_Type(General_Instructor_Type instance);
    partial void InsertHigher_Admin_Type(Higher_Admin_Type instance);
    partial void UpdateHigher_Admin_Type(Higher_Admin_Type instance);
    partial void DeleteHigher_Admin_Type(Higher_Admin_Type instance);
    partial void InsertInstructor_Type(Instructor_Type instance);
    partial void UpdateInstructor_Type(Instructor_Type instance);
    partial void DeleteInstructor_Type(Instructor_Type instance);
    partial void InsertUniversity(University instance);
    partial void UpdateUniversity(University instance);
    partial void DeleteUniversity(University instance);
    partial void InsertUser(User instance);
    partial void UpdateUser(User instance);
    partial void DeleteUser(User instance);
    partial void InsertUserType(UserType instance);
    partial void UpdateUserType(UserType instance);
    partial void DeleteUserType(UserType instance);
    partial void InsertCompanion(Companion instance);
    partial void UpdateCompanion(Companion instance);
    partial void DeleteCompanion(Companion instance);
    partial void InsertGeneral_Instructor(General_Instructor instance);
    partial void UpdateGeneral_Instructor(General_Instructor instance);
    partial void DeleteGeneral_Instructor(General_Instructor instance);
    partial void InsertHigher_Admin(Higher_Admin instance);
    partial void UpdateHigher_Admin(Higher_Admin instance);
    partial void DeleteHigher_Admin(Higher_Admin instance);
    partial void InsertInstructor(Instructor instance);
    partial void UpdateInstructor(Instructor instance);
    partial void DeleteInstructor(Instructor instance);
    partial void InsertStudent(Student instance);
    partial void UpdateStudent(Student instance);
    partial void DeleteStudent(Student instance);
    partial void InsertMember(Member instance);
    partial void UpdateMember(Member instance);
    partial void DeleteMember(Member instance);
    partial void InsertGender(Gender instance);
    partial void UpdateGender(Gender instance);
    partial void DeleteGender(Gender instance);
    #endregion
		
		public MyDataContext() : 
				base(global::System.Configuration.ConfigurationManager.ConnectionStrings["Annual_Youth_WeekConnectionString"].ConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public MyDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public MyDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public MyDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public MyDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<Activity> Activities
		{
			get
			{
				return this.GetTable<Activity>();
			}
		}
		
		public System.Data.Linq.Table<Year> Years
		{
			get
			{
				return this.GetTable<Year>();
			}
		}
		
		public System.Data.Linq.Table<Companion_type> Companion_types
		{
			get
			{
				return this.GetTable<Companion_type>();
			}
		}
		
		public System.Data.Linq.Table<Faculty> Faculties
		{
			get
			{
				return this.GetTable<Faculty>();
			}
		}
		
		public System.Data.Linq.Table<Field> Fields
		{
			get
			{
				return this.GetTable<Field>();
			}
		}
		
		public System.Data.Linq.Table<General_Instructor_Type> General_Instructor_Types
		{
			get
			{
				return this.GetTable<General_Instructor_Type>();
			}
		}
		
		public System.Data.Linq.Table<Higher_Admin_Type> Higher_Admin_Types
		{
			get
			{
				return this.GetTable<Higher_Admin_Type>();
			}
		}
		
		public System.Data.Linq.Table<Instructor_Type> Instructor_Types
		{
			get
			{
				return this.GetTable<Instructor_Type>();
			}
		}
		
		public System.Data.Linq.Table<University> Universities
		{
			get
			{
				return this.GetTable<University>();
			}
		}
		
		public System.Data.Linq.Table<User> Users
		{
			get
			{
				return this.GetTable<User>();
			}
		}
		
		public System.Data.Linq.Table<UserType> UserTypes
		{
			get
			{
				return this.GetTable<UserType>();
			}
		}
		
		public System.Data.Linq.Table<Companion> Companions
		{
			get
			{
				return this.GetTable<Companion>();
			}
		}
		
		public System.Data.Linq.Table<General_Instructor> General_Instructors
		{
			get
			{
				return this.GetTable<General_Instructor>();
			}
		}
		
		public System.Data.Linq.Table<Higher_Admin> Higher_Admins
		{
			get
			{
				return this.GetTable<Higher_Admin>();
			}
		}
		
		public System.Data.Linq.Table<Instructor> Instructors
		{
			get
			{
				return this.GetTable<Instructor>();
			}
		}
		
		public System.Data.Linq.Table<Student> Students
		{
			get
			{
				return this.GetTable<Student>();
			}
		}
		
		public System.Data.Linq.Table<Member> Members
		{
			get
			{
				return this.GetTable<Member>();
			}
		}
		
		public System.Data.Linq.Table<Gender> Genders
		{
			get
			{
				return this.GetTable<Gender>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Activities")]
	public partial class Activity : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private string _Activity_Name;
		
		private EntitySet<Field> _Fields;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnActivity_NameChanging(string value);
    partial void OnActivity_NameChanged();
    #endregion
		
		public Activity()
		{
			this._Fields = new EntitySet<Field>(new Action<Field>(this.attach_Fields), new Action<Field>(this.detach_Fields));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Activity_Name", DbType="NVarChar(500) NOT NULL", CanBeNull=false)]
		public string Activity_Name
		{
			get
			{
				return this._Activity_Name;
			}
			set
			{
				if ((this._Activity_Name != value))
				{
					this.OnActivity_NameChanging(value);
					this.SendPropertyChanging();
					this._Activity_Name = value;
					this.SendPropertyChanged("Activity_Name");
					this.OnActivity_NameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Activity_Field", Storage="_Fields", ThisKey="ID", OtherKey="Activity_id")]
		public EntitySet<Field> Fields
		{
			get
			{
				return this._Fields;
			}
			set
			{
				this._Fields.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Fields(Field entity)
		{
			this.SendPropertyChanging();
			entity.Activity = this;
		}
		
		private void detach_Fields(Field entity)
		{
			this.SendPropertyChanging();
			entity.Activity = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Years")]
	public partial class Year : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private string _Year1;
		
		private int _Fac_id;
		
		private EntitySet<Student> _Students;
		
		private EntityRef<Faculty> _Faculty;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnYear1Changing(string value);
    partial void OnYear1Changed();
    partial void OnFac_idChanging(int value);
    partial void OnFac_idChanged();
    #endregion
		
		public Year()
		{
			this._Students = new EntitySet<Student>(new Action<Student>(this.attach_Students), new Action<Student>(this.detach_Students));
			this._Faculty = default(EntityRef<Faculty>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="Year", Storage="_Year1", DbType="NVarChar(500) NOT NULL", CanBeNull=false)]
		public string Year1
		{
			get
			{
				return this._Year1;
			}
			set
			{
				if ((this._Year1 != value))
				{
					this.OnYear1Changing(value);
					this.SendPropertyChanging();
					this._Year1 = value;
					this.SendPropertyChanged("Year1");
					this.OnYear1Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Fac_id", DbType="Int NOT NULL")]
		public int Fac_id
		{
			get
			{
				return this._Fac_id;
			}
			set
			{
				if ((this._Fac_id != value))
				{
					if (this._Faculty.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnFac_idChanging(value);
					this.SendPropertyChanging();
					this._Fac_id = value;
					this.SendPropertyChanged("Fac_id");
					this.OnFac_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Year_Student", Storage="_Students", ThisKey="ID", OtherKey="Year_ID")]
		public EntitySet<Student> Students
		{
			get
			{
				return this._Students;
			}
			set
			{
				this._Students.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Faculty_Year", Storage="_Faculty", ThisKey="Fac_id", OtherKey="ID", IsForeignKey=true)]
		public Faculty Faculty
		{
			get
			{
				return this._Faculty.Entity;
			}
			set
			{
				Faculty previousValue = this._Faculty.Entity;
				if (((previousValue != value) 
							|| (this._Faculty.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Faculty.Entity = null;
						previousValue.Years.Remove(this);
					}
					this._Faculty.Entity = value;
					if ((value != null))
					{
						value.Years.Add(this);
						this._Fac_id = value.ID;
					}
					else
					{
						this._Fac_id = default(int);
					}
					this.SendPropertyChanged("Faculty");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Students(Student entity)
		{
			this.SendPropertyChanging();
			entity.Year = this;
		}
		
		private void detach_Students(Student entity)
		{
			this.SendPropertyChanging();
			entity.Year = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Companion_types")]
	public partial class Companion_type : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private string _Comp_Type;
		
		private EntitySet<Companion> _Companions;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnComp_TypeChanging(string value);
    partial void OnComp_TypeChanged();
    #endregion
		
		public Companion_type()
		{
			this._Companions = new EntitySet<Companion>(new Action<Companion>(this.attach_Companions), new Action<Companion>(this.detach_Companions));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Comp_Type", DbType="NVarChar(500) NOT NULL", CanBeNull=false)]
		public string Comp_Type
		{
			get
			{
				return this._Comp_Type;
			}
			set
			{
				if ((this._Comp_Type != value))
				{
					this.OnComp_TypeChanging(value);
					this.SendPropertyChanging();
					this._Comp_Type = value;
					this.SendPropertyChanged("Comp_Type");
					this.OnComp_TypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Companion_type_Companion", Storage="_Companions", ThisKey="ID", OtherKey="Comp_type")]
		public EntitySet<Companion> Companions
		{
			get
			{
				return this._Companions;
			}
			set
			{
				this._Companions.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Companions(Companion entity)
		{
			this.SendPropertyChanging();
			entity.Companion_type = this;
		}
		
		private void detach_Companions(Companion entity)
		{
			this.SendPropertyChanging();
			entity.Companion_type = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Faculties")]
	public partial class Faculty : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private string _Faculty1;
		
		private EntitySet<Year> _Years;
		
		private EntitySet<Student> _Students;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnFaculty1Changing(string value);
    partial void OnFaculty1Changed();
    #endregion
		
		public Faculty()
		{
			this._Years = new EntitySet<Year>(new Action<Year>(this.attach_Years), new Action<Year>(this.detach_Years));
			this._Students = new EntitySet<Student>(new Action<Student>(this.attach_Students), new Action<Student>(this.detach_Students));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="Faculty", Storage="_Faculty1", DbType="NVarChar(500) NOT NULL", CanBeNull=false)]
		public string Faculty1
		{
			get
			{
				return this._Faculty1;
			}
			set
			{
				if ((this._Faculty1 != value))
				{
					this.OnFaculty1Changing(value);
					this.SendPropertyChanging();
					this._Faculty1 = value;
					this.SendPropertyChanged("Faculty1");
					this.OnFaculty1Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Faculty_Year", Storage="_Years", ThisKey="ID", OtherKey="Fac_id")]
		public EntitySet<Year> Years
		{
			get
			{
				return this._Years;
			}
			set
			{
				this._Years.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Faculty_Student", Storage="_Students", ThisKey="ID", OtherKey="Faculty_ID")]
		public EntitySet<Student> Students
		{
			get
			{
				return this._Students;
			}
			set
			{
				this._Students.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Years(Year entity)
		{
			this.SendPropertyChanging();
			entity.Faculty = this;
		}
		
		private void detach_Years(Year entity)
		{
			this.SendPropertyChanging();
			entity.Faculty = null;
		}
		
		private void attach_Students(Student entity)
		{
			this.SendPropertyChanging();
			entity.Faculty = this;
		}
		
		private void detach_Students(Student entity)
		{
			this.SendPropertyChanging();
			entity.Faculty = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Fields")]
	public partial class Field : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private string _Field_Name;
		
		private int _Activity_id;
		
		private EntitySet<Instructor> _Instructors;
		
		private EntitySet<Student> _Students;
		
		private EntityRef<Activity> _Activity;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnField_NameChanging(string value);
    partial void OnField_NameChanged();
    partial void OnActivity_idChanging(int value);
    partial void OnActivity_idChanged();
    #endregion
		
		public Field()
		{
			this._Instructors = new EntitySet<Instructor>(new Action<Instructor>(this.attach_Instructors), new Action<Instructor>(this.detach_Instructors));
			this._Students = new EntitySet<Student>(new Action<Student>(this.attach_Students), new Action<Student>(this.detach_Students));
			this._Activity = default(EntityRef<Activity>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Field_Name", DbType="NVarChar(500) NOT NULL", CanBeNull=false)]
		public string Field_Name
		{
			get
			{
				return this._Field_Name;
			}
			set
			{
				if ((this._Field_Name != value))
				{
					this.OnField_NameChanging(value);
					this.SendPropertyChanging();
					this._Field_Name = value;
					this.SendPropertyChanged("Field_Name");
					this.OnField_NameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Activity_id", DbType="Int NOT NULL")]
		public int Activity_id
		{
			get
			{
				return this._Activity_id;
			}
			set
			{
				if ((this._Activity_id != value))
				{
					if (this._Activity.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnActivity_idChanging(value);
					this.SendPropertyChanging();
					this._Activity_id = value;
					this.SendPropertyChanged("Activity_id");
					this.OnActivity_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Field_Instructor", Storage="_Instructors", ThisKey="ID", OtherKey="FieldID")]
		public EntitySet<Instructor> Instructors
		{
			get
			{
				return this._Instructors;
			}
			set
			{
				this._Instructors.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Field_Student", Storage="_Students", ThisKey="ID", OtherKey="Field_id")]
		public EntitySet<Student> Students
		{
			get
			{
				return this._Students;
			}
			set
			{
				this._Students.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Activity_Field", Storage="_Activity", ThisKey="Activity_id", OtherKey="ID", IsForeignKey=true)]
		public Activity Activity
		{
			get
			{
				return this._Activity.Entity;
			}
			set
			{
				Activity previousValue = this._Activity.Entity;
				if (((previousValue != value) 
							|| (this._Activity.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Activity.Entity = null;
						previousValue.Fields.Remove(this);
					}
					this._Activity.Entity = value;
					if ((value != null))
					{
						value.Fields.Add(this);
						this._Activity_id = value.ID;
					}
					else
					{
						this._Activity_id = default(int);
					}
					this.SendPropertyChanged("Activity");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Instructors(Instructor entity)
		{
			this.SendPropertyChanging();
			entity.Field = this;
		}
		
		private void detach_Instructors(Instructor entity)
		{
			this.SendPropertyChanging();
			entity.Field = null;
		}
		
		private void attach_Students(Student entity)
		{
			this.SendPropertyChanging();
			entity.Field = this;
		}
		
		private void detach_Students(Student entity)
		{
			this.SendPropertyChanging();
			entity.Field = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.General_Instructor_Types")]
	public partial class General_Instructor_Type : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private string _Gen_Inst_Type;
		
		private EntitySet<General_Instructor> _General_Instructors;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnGen_Inst_TypeChanging(string value);
    partial void OnGen_Inst_TypeChanged();
    #endregion
		
		public General_Instructor_Type()
		{
			this._General_Instructors = new EntitySet<General_Instructor>(new Action<General_Instructor>(this.attach_General_Instructors), new Action<General_Instructor>(this.detach_General_Instructors));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Gen_Inst_Type", DbType="NVarChar(500) NOT NULL", CanBeNull=false)]
		public string Gen_Inst_Type
		{
			get
			{
				return this._Gen_Inst_Type;
			}
			set
			{
				if ((this._Gen_Inst_Type != value))
				{
					this.OnGen_Inst_TypeChanging(value);
					this.SendPropertyChanging();
					this._Gen_Inst_Type = value;
					this.SendPropertyChanged("Gen_Inst_Type");
					this.OnGen_Inst_TypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="General_Instructor_Type_General_Instructor", Storage="_General_Instructors", ThisKey="ID", OtherKey="General_inst_type")]
		public EntitySet<General_Instructor> General_Instructors
		{
			get
			{
				return this._General_Instructors;
			}
			set
			{
				this._General_Instructors.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_General_Instructors(General_Instructor entity)
		{
			this.SendPropertyChanging();
			entity.General_Instructor_Type = this;
		}
		
		private void detach_General_Instructors(General_Instructor entity)
		{
			this.SendPropertyChanging();
			entity.General_Instructor_Type = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Higher_Admin_Types")]
	public partial class Higher_Admin_Type : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private string _Admin_Type;
		
		private EntitySet<Higher_Admin> _Higher_Admins;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnAdmin_TypeChanging(string value);
    partial void OnAdmin_TypeChanged();
    #endregion
		
		public Higher_Admin_Type()
		{
			this._Higher_Admins = new EntitySet<Higher_Admin>(new Action<Higher_Admin>(this.attach_Higher_Admins), new Action<Higher_Admin>(this.detach_Higher_Admins));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Admin_Type", DbType="NVarChar(MAX) NOT NULL", CanBeNull=false)]
		public string Admin_Type
		{
			get
			{
				return this._Admin_Type;
			}
			set
			{
				if ((this._Admin_Type != value))
				{
					this.OnAdmin_TypeChanging(value);
					this.SendPropertyChanging();
					this._Admin_Type = value;
					this.SendPropertyChanged("Admin_Type");
					this.OnAdmin_TypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Higher_Admin_Type_Higher_Admin", Storage="_Higher_Admins", ThisKey="ID", OtherKey="Admin_type_id")]
		public EntitySet<Higher_Admin> Higher_Admins
		{
			get
			{
				return this._Higher_Admins;
			}
			set
			{
				this._Higher_Admins.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Higher_Admins(Higher_Admin entity)
		{
			this.SendPropertyChanging();
			entity.Higher_Admin_Type = this;
		}
		
		private void detach_Higher_Admins(Higher_Admin entity)
		{
			this.SendPropertyChanging();
			entity.Higher_Admin_Type = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Instructor_Types")]
	public partial class Instructor_Type : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private string _Inst_Type;
		
		private EntitySet<Instructor> _Instructors;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnInst_TypeChanging(string value);
    partial void OnInst_TypeChanged();
    #endregion
		
		public Instructor_Type()
		{
			this._Instructors = new EntitySet<Instructor>(new Action<Instructor>(this.attach_Instructors), new Action<Instructor>(this.detach_Instructors));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Inst_Type", DbType="NVarChar(MAX) NOT NULL", CanBeNull=false)]
		public string Inst_Type
		{
			get
			{
				return this._Inst_Type;
			}
			set
			{
				if ((this._Inst_Type != value))
				{
					this.OnInst_TypeChanging(value);
					this.SendPropertyChanging();
					this._Inst_Type = value;
					this.SendPropertyChanged("Inst_Type");
					this.OnInst_TypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Instructor_Type_Instructor", Storage="_Instructors", ThisKey="ID", OtherKey="Inst_type")]
		public EntitySet<Instructor> Instructors
		{
			get
			{
				return this._Instructors;
			}
			set
			{
				this._Instructors.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Instructors(Instructor entity)
		{
			this.SendPropertyChanging();
			entity.Instructor_Type = this;
		}
		
		private void detach_Instructors(Instructor entity)
		{
			this.SendPropertyChanging();
			entity.Instructor_Type = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Universities")]
	public partial class University : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private string _University_Name;
		
		private EntitySet<User> _Users;
		
		private EntitySet<Companion> _Companions;
		
		private EntitySet<General_Instructor> _General_Instructors;
		
		private EntitySet<Higher_Admin> _Higher_Admins;
		
		private EntitySet<Instructor> _Instructors;
		
		private EntitySet<Student> _Students;
		
		private EntitySet<Member> _Members;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnUniversity_NameChanging(string value);
    partial void OnUniversity_NameChanged();
    #endregion
		
		public University()
		{
			this._Users = new EntitySet<User>(new Action<User>(this.attach_Users), new Action<User>(this.detach_Users));
			this._Companions = new EntitySet<Companion>(new Action<Companion>(this.attach_Companions), new Action<Companion>(this.detach_Companions));
			this._General_Instructors = new EntitySet<General_Instructor>(new Action<General_Instructor>(this.attach_General_Instructors), new Action<General_Instructor>(this.detach_General_Instructors));
			this._Higher_Admins = new EntitySet<Higher_Admin>(new Action<Higher_Admin>(this.attach_Higher_Admins), new Action<Higher_Admin>(this.detach_Higher_Admins));
			this._Instructors = new EntitySet<Instructor>(new Action<Instructor>(this.attach_Instructors), new Action<Instructor>(this.detach_Instructors));
			this._Students = new EntitySet<Student>(new Action<Student>(this.attach_Students), new Action<Student>(this.detach_Students));
			this._Members = new EntitySet<Member>(new Action<Member>(this.attach_Members), new Action<Member>(this.detach_Members));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_University_Name", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string University_Name
		{
			get
			{
				return this._University_Name;
			}
			set
			{
				if ((this._University_Name != value))
				{
					this.OnUniversity_NameChanging(value);
					this.SendPropertyChanging();
					this._University_Name = value;
					this.SendPropertyChanged("University_Name");
					this.OnUniversity_NameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="University_User", Storage="_Users", ThisKey="ID", OtherKey="University_id")]
		public EntitySet<User> Users
		{
			get
			{
				return this._Users;
			}
			set
			{
				this._Users.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="University_Companion", Storage="_Companions", ThisKey="ID", OtherKey="University_id")]
		public EntitySet<Companion> Companions
		{
			get
			{
				return this._Companions;
			}
			set
			{
				this._Companions.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="University_General_Instructor", Storage="_General_Instructors", ThisKey="ID", OtherKey="University_id")]
		public EntitySet<General_Instructor> General_Instructors
		{
			get
			{
				return this._General_Instructors;
			}
			set
			{
				this._General_Instructors.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="University_Higher_Admin", Storage="_Higher_Admins", ThisKey="ID", OtherKey="University_id")]
		public EntitySet<Higher_Admin> Higher_Admins
		{
			get
			{
				return this._Higher_Admins;
			}
			set
			{
				this._Higher_Admins.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="University_Instructor", Storage="_Instructors", ThisKey="ID", OtherKey="University_id")]
		public EntitySet<Instructor> Instructors
		{
			get
			{
				return this._Instructors;
			}
			set
			{
				this._Instructors.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="University_Student", Storage="_Students", ThisKey="ID", OtherKey="University_id")]
		public EntitySet<Student> Students
		{
			get
			{
				return this._Students;
			}
			set
			{
				this._Students.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="University_Member", Storage="_Members", ThisKey="ID", OtherKey="University_id")]
		public EntitySet<Member> Members
		{
			get
			{
				return this._Members;
			}
			set
			{
				this._Members.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Users(User entity)
		{
			this.SendPropertyChanging();
			entity.University = this;
		}
		
		private void detach_Users(User entity)
		{
			this.SendPropertyChanging();
			entity.University = null;
		}
		
		private void attach_Companions(Companion entity)
		{
			this.SendPropertyChanging();
			entity.University = this;
		}
		
		private void detach_Companions(Companion entity)
		{
			this.SendPropertyChanging();
			entity.University = null;
		}
		
		private void attach_General_Instructors(General_Instructor entity)
		{
			this.SendPropertyChanging();
			entity.University = this;
		}
		
		private void detach_General_Instructors(General_Instructor entity)
		{
			this.SendPropertyChanging();
			entity.University = null;
		}
		
		private void attach_Higher_Admins(Higher_Admin entity)
		{
			this.SendPropertyChanging();
			entity.University = this;
		}
		
		private void detach_Higher_Admins(Higher_Admin entity)
		{
			this.SendPropertyChanging();
			entity.University = null;
		}
		
		private void attach_Instructors(Instructor entity)
		{
			this.SendPropertyChanging();
			entity.University = this;
		}
		
		private void detach_Instructors(Instructor entity)
		{
			this.SendPropertyChanging();
			entity.University = null;
		}
		
		private void attach_Students(Student entity)
		{
			this.SendPropertyChanging();
			entity.University = this;
		}
		
		private void detach_Students(Student entity)
		{
			this.SendPropertyChanging();
			entity.University = null;
		}
		
		private void attach_Members(Member entity)
		{
			this.SendPropertyChanging();
			entity.University = this;
		}
		
		private void detach_Members(Member entity)
		{
			this.SendPropertyChanging();
			entity.University = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Users")]
	public partial class User : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private string _UserName;
		
		private string _Password;
		
		private System.Nullable<int> _University_id;
		
		private int _user_type_id;
		
		private bool _Loginstate;
		
		private EntityRef<University> _University;
		
		private EntityRef<UserType> _UserType;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnUserNameChanging(string value);
    partial void OnUserNameChanged();
    partial void OnPasswordChanging(string value);
    partial void OnPasswordChanged();
    partial void OnUniversity_idChanging(System.Nullable<int> value);
    partial void OnUniversity_idChanged();
    partial void Onuser_type_idChanging(int value);
    partial void Onuser_type_idChanged();
    partial void OnLoginstateChanging(bool value);
    partial void OnLoginstateChanged();
    #endregion
		
		public User()
		{
			this._University = default(EntityRef<University>);
			this._UserType = default(EntityRef<UserType>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserName", DbType="NVarChar(500) NOT NULL", CanBeNull=false)]
		public string UserName
		{
			get
			{
				return this._UserName;
			}
			set
			{
				if ((this._UserName != value))
				{
					this.OnUserNameChanging(value);
					this.SendPropertyChanging();
					this._UserName = value;
					this.SendPropertyChanged("UserName");
					this.OnUserNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Password", DbType="NVarChar(15) NOT NULL", CanBeNull=false)]
		public string Password
		{
			get
			{
				return this._Password;
			}
			set
			{
				if ((this._Password != value))
				{
					this.OnPasswordChanging(value);
					this.SendPropertyChanging();
					this._Password = value;
					this.SendPropertyChanged("Password");
					this.OnPasswordChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_University_id", DbType="Int")]
		public System.Nullable<int> University_id
		{
			get
			{
				return this._University_id;
			}
			set
			{
				if ((this._University_id != value))
				{
					if (this._University.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnUniversity_idChanging(value);
					this.SendPropertyChanging();
					this._University_id = value;
					this.SendPropertyChanged("University_id");
					this.OnUniversity_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_user_type_id", DbType="Int NOT NULL")]
		public int user_type_id
		{
			get
			{
				return this._user_type_id;
			}
			set
			{
				if ((this._user_type_id != value))
				{
					if (this._UserType.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onuser_type_idChanging(value);
					this.SendPropertyChanging();
					this._user_type_id = value;
					this.SendPropertyChanged("user_type_id");
					this.Onuser_type_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Loginstate", DbType="Bit NOT NULL")]
		public bool Loginstate
		{
			get
			{
				return this._Loginstate;
			}
			set
			{
				if ((this._Loginstate != value))
				{
					this.OnLoginstateChanging(value);
					this.SendPropertyChanging();
					this._Loginstate = value;
					this.SendPropertyChanged("Loginstate");
					this.OnLoginstateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="University_User", Storage="_University", ThisKey="University_id", OtherKey="ID", IsForeignKey=true)]
		public University University
		{
			get
			{
				return this._University.Entity;
			}
			set
			{
				University previousValue = this._University.Entity;
				if (((previousValue != value) 
							|| (this._University.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._University.Entity = null;
						previousValue.Users.Remove(this);
					}
					this._University.Entity = value;
					if ((value != null))
					{
						value.Users.Add(this);
						this._University_id = value.ID;
					}
					else
					{
						this._University_id = default(Nullable<int>);
					}
					this.SendPropertyChanged("University");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="UserType_User", Storage="_UserType", ThisKey="user_type_id", OtherKey="ID", IsForeignKey=true)]
		public UserType UserType
		{
			get
			{
				return this._UserType.Entity;
			}
			set
			{
				UserType previousValue = this._UserType.Entity;
				if (((previousValue != value) 
							|| (this._UserType.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._UserType.Entity = null;
						previousValue.Users.Remove(this);
					}
					this._UserType.Entity = value;
					if ((value != null))
					{
						value.Users.Add(this);
						this._user_type_id = value.ID;
					}
					else
					{
						this._user_type_id = default(int);
					}
					this.SendPropertyChanged("UserType");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.UserTypes")]
	public partial class UserType : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private string _UserType1;
		
		private EntitySet<User> _Users;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnUserType1Changing(string value);
    partial void OnUserType1Changed();
    #endregion
		
		public UserType()
		{
			this._Users = new EntitySet<User>(new Action<User>(this.attach_Users), new Action<User>(this.detach_Users));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="UserType", Storage="_UserType1", DbType="NVarChar(500) NOT NULL", CanBeNull=false)]
		public string UserType1
		{
			get
			{
				return this._UserType1;
			}
			set
			{
				if ((this._UserType1 != value))
				{
					this.OnUserType1Changing(value);
					this.SendPropertyChanging();
					this._UserType1 = value;
					this.SendPropertyChanged("UserType1");
					this.OnUserType1Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="UserType_User", Storage="_Users", ThisKey="ID", OtherKey="user_type_id")]
		public EntitySet<User> Users
		{
			get
			{
				return this._Users;
			}
			set
			{
				this._Users.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Users(User entity)
		{
			this.SendPropertyChanging();
			entity.UserType = this;
		}
		
		private void detach_Users(User entity)
		{
			this.SendPropertyChanging();
			entity.UserType = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Companions")]
	public partial class Companion : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private string _Comp_Name;
		
		private string _National_ID;
		
		private bool _Gender;
		
		private string _Birth_Date;
		
		private string _Birth_Place;
		
		private string _phone_no;
		
		private string _Email;
		
		private string _Address;
		
		private string _Personal_Image;
		
		private string _NatID_Image;
		
		private int _University_id;
		
		private int _Comp_type;
		
		private System.Nullable<int> _SerialNo;
		
		private EntityRef<Companion_type> _Companion_type;
		
		private EntityRef<University> _University;
		
		private EntityRef<Gender> _Gender1;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnComp_NameChanging(string value);
    partial void OnComp_NameChanged();
    partial void OnNational_IDChanging(string value);
    partial void OnNational_IDChanged();
    partial void OnGenderChanging(bool value);
    partial void OnGenderChanged();
    partial void OnBirth_DateChanging(string value);
    partial void OnBirth_DateChanged();
    partial void OnBirth_PlaceChanging(string value);
    partial void OnBirth_PlaceChanged();
    partial void Onphone_noChanging(string value);
    partial void Onphone_noChanged();
    partial void OnEmailChanging(string value);
    partial void OnEmailChanged();
    partial void OnAddressChanging(string value);
    partial void OnAddressChanged();
    partial void OnPersonal_ImageChanging(string value);
    partial void OnPersonal_ImageChanged();
    partial void OnNatID_ImageChanging(string value);
    partial void OnNatID_ImageChanged();
    partial void OnUniversity_idChanging(int value);
    partial void OnUniversity_idChanged();
    partial void OnComp_typeChanging(int value);
    partial void OnComp_typeChanged();
    partial void OnSerialNoChanging(System.Nullable<int> value);
    partial void OnSerialNoChanged();
    #endregion
		
		public Companion()
		{
			this._Companion_type = default(EntityRef<Companion_type>);
			this._University = default(EntityRef<University>);
			this._Gender1 = default(EntityRef<Gender>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Comp_Name", DbType="NVarChar(MAX) NOT NULL", CanBeNull=false)]
		public string Comp_Name
		{
			get
			{
				return this._Comp_Name;
			}
			set
			{
				if ((this._Comp_Name != value))
				{
					this.OnComp_NameChanging(value);
					this.SendPropertyChanging();
					this._Comp_Name = value;
					this.SendPropertyChanged("Comp_Name");
					this.OnComp_NameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_National_ID", DbType="NVarChar(14) NOT NULL", CanBeNull=false)]
		public string National_ID
		{
			get
			{
				return this._National_ID;
			}
			set
			{
				if ((this._National_ID != value))
				{
					this.OnNational_IDChanging(value);
					this.SendPropertyChanging();
					this._National_ID = value;
					this.SendPropertyChanged("National_ID");
					this.OnNational_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Gender", DbType="Bit NOT NULL")]
		public bool Gender
		{
			get
			{
				return this._Gender;
			}
			set
			{
				if ((this._Gender != value))
				{
					if (this._Gender1.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnGenderChanging(value);
					this.SendPropertyChanging();
					this._Gender = value;
					this.SendPropertyChanged("Gender");
					this.OnGenderChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Birth_Date", DbType="NVarChar(50)")]
		public string Birth_Date
		{
			get
			{
				return this._Birth_Date;
			}
			set
			{
				if ((this._Birth_Date != value))
				{
					this.OnBirth_DateChanging(value);
					this.SendPropertyChanging();
					this._Birth_Date = value;
					this.SendPropertyChanged("Birth_Date");
					this.OnBirth_DateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Birth_Place", DbType="NVarChar(MAX)")]
		public string Birth_Place
		{
			get
			{
				return this._Birth_Place;
			}
			set
			{
				if ((this._Birth_Place != value))
				{
					this.OnBirth_PlaceChanging(value);
					this.SendPropertyChanging();
					this._Birth_Place = value;
					this.SendPropertyChanged("Birth_Place");
					this.OnBirth_PlaceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_phone_no", DbType="NVarChar(50)")]
		public string phone_no
		{
			get
			{
				return this._phone_no;
			}
			set
			{
				if ((this._phone_no != value))
				{
					this.Onphone_noChanging(value);
					this.SendPropertyChanging();
					this._phone_no = value;
					this.SendPropertyChanged("phone_no");
					this.Onphone_noChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Email", DbType="NVarChar(500)")]
		public string Email
		{
			get
			{
				return this._Email;
			}
			set
			{
				if ((this._Email != value))
				{
					this.OnEmailChanging(value);
					this.SendPropertyChanging();
					this._Email = value;
					this.SendPropertyChanged("Email");
					this.OnEmailChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Address", DbType="NVarChar(MAX)")]
		public string Address
		{
			get
			{
				return this._Address;
			}
			set
			{
				if ((this._Address != value))
				{
					this.OnAddressChanging(value);
					this.SendPropertyChanging();
					this._Address = value;
					this.SendPropertyChanged("Address");
					this.OnAddressChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Personal_Image", DbType="NVarChar(MAX)")]
		public string Personal_Image
		{
			get
			{
				return this._Personal_Image;
			}
			set
			{
				if ((this._Personal_Image != value))
				{
					this.OnPersonal_ImageChanging(value);
					this.SendPropertyChanging();
					this._Personal_Image = value;
					this.SendPropertyChanged("Personal_Image");
					this.OnPersonal_ImageChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NatID_Image", DbType="NVarChar(MAX)")]
		public string NatID_Image
		{
			get
			{
				return this._NatID_Image;
			}
			set
			{
				if ((this._NatID_Image != value))
				{
					this.OnNatID_ImageChanging(value);
					this.SendPropertyChanging();
					this._NatID_Image = value;
					this.SendPropertyChanged("NatID_Image");
					this.OnNatID_ImageChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_University_id", DbType="Int NOT NULL")]
		public int University_id
		{
			get
			{
				return this._University_id;
			}
			set
			{
				if ((this._University_id != value))
				{
					if (this._University.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnUniversity_idChanging(value);
					this.SendPropertyChanging();
					this._University_id = value;
					this.SendPropertyChanged("University_id");
					this.OnUniversity_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Comp_type", DbType="Int NOT NULL")]
		public int Comp_type
		{
			get
			{
				return this._Comp_type;
			}
			set
			{
				if ((this._Comp_type != value))
				{
					if (this._Companion_type.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnComp_typeChanging(value);
					this.SendPropertyChanging();
					this._Comp_type = value;
					this.SendPropertyChanged("Comp_type");
					this.OnComp_typeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SerialNo", DbType="Int")]
		public System.Nullable<int> SerialNo
		{
			get
			{
				return this._SerialNo;
			}
			set
			{
				if ((this._SerialNo != value))
				{
					this.OnSerialNoChanging(value);
					this.SendPropertyChanging();
					this._SerialNo = value;
					this.SendPropertyChanged("SerialNo");
					this.OnSerialNoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Companion_type_Companion", Storage="_Companion_type", ThisKey="Comp_type", OtherKey="ID", IsForeignKey=true)]
		public Companion_type Companion_type
		{
			get
			{
				return this._Companion_type.Entity;
			}
			set
			{
				Companion_type previousValue = this._Companion_type.Entity;
				if (((previousValue != value) 
							|| (this._Companion_type.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Companion_type.Entity = null;
						previousValue.Companions.Remove(this);
					}
					this._Companion_type.Entity = value;
					if ((value != null))
					{
						value.Companions.Add(this);
						this._Comp_type = value.ID;
					}
					else
					{
						this._Comp_type = default(int);
					}
					this.SendPropertyChanged("Companion_type");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="University_Companion", Storage="_University", ThisKey="University_id", OtherKey="ID", IsForeignKey=true)]
		public University University
		{
			get
			{
				return this._University.Entity;
			}
			set
			{
				University previousValue = this._University.Entity;
				if (((previousValue != value) 
							|| (this._University.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._University.Entity = null;
						previousValue.Companions.Remove(this);
					}
					this._University.Entity = value;
					if ((value != null))
					{
						value.Companions.Add(this);
						this._University_id = value.ID;
					}
					else
					{
						this._University_id = default(int);
					}
					this.SendPropertyChanged("University");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Gender_Companion", Storage="_Gender1", ThisKey="Gender", OtherKey="id", IsForeignKey=true)]
		public Gender Gender1
		{
			get
			{
				return this._Gender1.Entity;
			}
			set
			{
				Gender previousValue = this._Gender1.Entity;
				if (((previousValue != value) 
							|| (this._Gender1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Gender1.Entity = null;
						previousValue.Companions.Remove(this);
					}
					this._Gender1.Entity = value;
					if ((value != null))
					{
						value.Companions.Add(this);
						this._Gender = value.id;
					}
					else
					{
						this._Gender = default(bool);
					}
					this.SendPropertyChanged("Gender1");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.General_Instructors")]
	public partial class General_Instructor : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private string _Gen_Inst_Name;
		
		private string _National_ID;
		
		private bool _Gender;
		
		private string _Birth_Date;
		
		private string _Birth_Place;
		
		private string _phone_no;
		
		private string _Email;
		
		private string _Address;
		
		private string _Personal_Image;
		
		private string _NatID_Image;
		
		private int _University_id;
		
		private int _General_inst_type;
		
		private System.Nullable<int> _SerialNo;
		
		private EntityRef<General_Instructor_Type> _General_Instructor_Type;
		
		private EntityRef<University> _University;
		
		private EntityRef<Gender> _Gender1;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnGen_Inst_NameChanging(string value);
    partial void OnGen_Inst_NameChanged();
    partial void OnNational_IDChanging(string value);
    partial void OnNational_IDChanged();
    partial void OnGenderChanging(bool value);
    partial void OnGenderChanged();
    partial void OnBirth_DateChanging(string value);
    partial void OnBirth_DateChanged();
    partial void OnBirth_PlaceChanging(string value);
    partial void OnBirth_PlaceChanged();
    partial void Onphone_noChanging(string value);
    partial void Onphone_noChanged();
    partial void OnEmailChanging(string value);
    partial void OnEmailChanged();
    partial void OnAddressChanging(string value);
    partial void OnAddressChanged();
    partial void OnPersonal_ImageChanging(string value);
    partial void OnPersonal_ImageChanged();
    partial void OnNatID_ImageChanging(string value);
    partial void OnNatID_ImageChanged();
    partial void OnUniversity_idChanging(int value);
    partial void OnUniversity_idChanged();
    partial void OnGeneral_inst_typeChanging(int value);
    partial void OnGeneral_inst_typeChanged();
    partial void OnSerialNoChanging(System.Nullable<int> value);
    partial void OnSerialNoChanged();
    #endregion
		
		public General_Instructor()
		{
			this._General_Instructor_Type = default(EntityRef<General_Instructor_Type>);
			this._University = default(EntityRef<University>);
			this._Gender1 = default(EntityRef<Gender>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Gen_Inst_Name", DbType="NVarChar(MAX) NOT NULL", CanBeNull=false)]
		public string Gen_Inst_Name
		{
			get
			{
				return this._Gen_Inst_Name;
			}
			set
			{
				if ((this._Gen_Inst_Name != value))
				{
					this.OnGen_Inst_NameChanging(value);
					this.SendPropertyChanging();
					this._Gen_Inst_Name = value;
					this.SendPropertyChanged("Gen_Inst_Name");
					this.OnGen_Inst_NameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_National_ID", DbType="NVarChar(14) NOT NULL", CanBeNull=false)]
		public string National_ID
		{
			get
			{
				return this._National_ID;
			}
			set
			{
				if ((this._National_ID != value))
				{
					this.OnNational_IDChanging(value);
					this.SendPropertyChanging();
					this._National_ID = value;
					this.SendPropertyChanged("National_ID");
					this.OnNational_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Gender", DbType="Bit NOT NULL")]
		public bool Gender
		{
			get
			{
				return this._Gender;
			}
			set
			{
				if ((this._Gender != value))
				{
					if (this._Gender1.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnGenderChanging(value);
					this.SendPropertyChanging();
					this._Gender = value;
					this.SendPropertyChanged("Gender");
					this.OnGenderChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Birth_Date", DbType="NVarChar(50)")]
		public string Birth_Date
		{
			get
			{
				return this._Birth_Date;
			}
			set
			{
				if ((this._Birth_Date != value))
				{
					this.OnBirth_DateChanging(value);
					this.SendPropertyChanging();
					this._Birth_Date = value;
					this.SendPropertyChanged("Birth_Date");
					this.OnBirth_DateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Birth_Place", DbType="NVarChar(MAX)")]
		public string Birth_Place
		{
			get
			{
				return this._Birth_Place;
			}
			set
			{
				if ((this._Birth_Place != value))
				{
					this.OnBirth_PlaceChanging(value);
					this.SendPropertyChanging();
					this._Birth_Place = value;
					this.SendPropertyChanged("Birth_Place");
					this.OnBirth_PlaceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_phone_no", DbType="NVarChar(50)")]
		public string phone_no
		{
			get
			{
				return this._phone_no;
			}
			set
			{
				if ((this._phone_no != value))
				{
					this.Onphone_noChanging(value);
					this.SendPropertyChanging();
					this._phone_no = value;
					this.SendPropertyChanged("phone_no");
					this.Onphone_noChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Email", DbType="NVarChar(500)")]
		public string Email
		{
			get
			{
				return this._Email;
			}
			set
			{
				if ((this._Email != value))
				{
					this.OnEmailChanging(value);
					this.SendPropertyChanging();
					this._Email = value;
					this.SendPropertyChanged("Email");
					this.OnEmailChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Address", DbType="NVarChar(MAX)")]
		public string Address
		{
			get
			{
				return this._Address;
			}
			set
			{
				if ((this._Address != value))
				{
					this.OnAddressChanging(value);
					this.SendPropertyChanging();
					this._Address = value;
					this.SendPropertyChanged("Address");
					this.OnAddressChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Personal_Image", DbType="NVarChar(MAX)")]
		public string Personal_Image
		{
			get
			{
				return this._Personal_Image;
			}
			set
			{
				if ((this._Personal_Image != value))
				{
					this.OnPersonal_ImageChanging(value);
					this.SendPropertyChanging();
					this._Personal_Image = value;
					this.SendPropertyChanged("Personal_Image");
					this.OnPersonal_ImageChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NatID_Image", DbType="NVarChar(MAX)")]
		public string NatID_Image
		{
			get
			{
				return this._NatID_Image;
			}
			set
			{
				if ((this._NatID_Image != value))
				{
					this.OnNatID_ImageChanging(value);
					this.SendPropertyChanging();
					this._NatID_Image = value;
					this.SendPropertyChanged("NatID_Image");
					this.OnNatID_ImageChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_University_id", DbType="Int NOT NULL")]
		public int University_id
		{
			get
			{
				return this._University_id;
			}
			set
			{
				if ((this._University_id != value))
				{
					if (this._University.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnUniversity_idChanging(value);
					this.SendPropertyChanging();
					this._University_id = value;
					this.SendPropertyChanged("University_id");
					this.OnUniversity_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_General_inst_type", DbType="Int NOT NULL")]
		public int General_inst_type
		{
			get
			{
				return this._General_inst_type;
			}
			set
			{
				if ((this._General_inst_type != value))
				{
					if (this._General_Instructor_Type.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnGeneral_inst_typeChanging(value);
					this.SendPropertyChanging();
					this._General_inst_type = value;
					this.SendPropertyChanged("General_inst_type");
					this.OnGeneral_inst_typeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SerialNo", DbType="Int")]
		public System.Nullable<int> SerialNo
		{
			get
			{
				return this._SerialNo;
			}
			set
			{
				if ((this._SerialNo != value))
				{
					this.OnSerialNoChanging(value);
					this.SendPropertyChanging();
					this._SerialNo = value;
					this.SendPropertyChanged("SerialNo");
					this.OnSerialNoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="General_Instructor_Type_General_Instructor", Storage="_General_Instructor_Type", ThisKey="General_inst_type", OtherKey="ID", IsForeignKey=true)]
		public General_Instructor_Type General_Instructor_Type
		{
			get
			{
				return this._General_Instructor_Type.Entity;
			}
			set
			{
				General_Instructor_Type previousValue = this._General_Instructor_Type.Entity;
				if (((previousValue != value) 
							|| (this._General_Instructor_Type.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._General_Instructor_Type.Entity = null;
						previousValue.General_Instructors.Remove(this);
					}
					this._General_Instructor_Type.Entity = value;
					if ((value != null))
					{
						value.General_Instructors.Add(this);
						this._General_inst_type = value.ID;
					}
					else
					{
						this._General_inst_type = default(int);
					}
					this.SendPropertyChanged("General_Instructor_Type");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="University_General_Instructor", Storage="_University", ThisKey="University_id", OtherKey="ID", IsForeignKey=true)]
		public University University
		{
			get
			{
				return this._University.Entity;
			}
			set
			{
				University previousValue = this._University.Entity;
				if (((previousValue != value) 
							|| (this._University.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._University.Entity = null;
						previousValue.General_Instructors.Remove(this);
					}
					this._University.Entity = value;
					if ((value != null))
					{
						value.General_Instructors.Add(this);
						this._University_id = value.ID;
					}
					else
					{
						this._University_id = default(int);
					}
					this.SendPropertyChanged("University");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Gender_General_Instructor", Storage="_Gender1", ThisKey="Gender", OtherKey="id", IsForeignKey=true)]
		public Gender Gender1
		{
			get
			{
				return this._Gender1.Entity;
			}
			set
			{
				Gender previousValue = this._Gender1.Entity;
				if (((previousValue != value) 
							|| (this._Gender1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Gender1.Entity = null;
						previousValue.General_Instructors.Remove(this);
					}
					this._Gender1.Entity = value;
					if ((value != null))
					{
						value.General_Instructors.Add(this);
						this._Gender = value.id;
					}
					else
					{
						this._Gender = default(bool);
					}
					this.SendPropertyChanged("Gender1");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Higher_Admins")]
	public partial class Higher_Admin : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private string _Admin_Name;
		
		private string _National_ID;
		
		private string _Phone_Number;
		
		private string _Birth_Date;
		
		private string _Birth_Place;
		
		private string _Address;
		
		private string _Email;
		
		private string _Personal_Image;
		
		private int _University_id;
		
		private int _Admin_type_id;
		
		private System.Nullable<int> _SerialNo;
		
		private EntityRef<Higher_Admin_Type> _Higher_Admin_Type;
		
		private EntityRef<University> _University;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnAdmin_NameChanging(string value);
    partial void OnAdmin_NameChanged();
    partial void OnNational_IDChanging(string value);
    partial void OnNational_IDChanged();
    partial void OnPhone_NumberChanging(string value);
    partial void OnPhone_NumberChanged();
    partial void OnBirth_DateChanging(string value);
    partial void OnBirth_DateChanged();
    partial void OnBirth_PlaceChanging(string value);
    partial void OnBirth_PlaceChanged();
    partial void OnAddressChanging(string value);
    partial void OnAddressChanged();
    partial void OnEmailChanging(string value);
    partial void OnEmailChanged();
    partial void OnPersonal_ImageChanging(string value);
    partial void OnPersonal_ImageChanged();
    partial void OnUniversity_idChanging(int value);
    partial void OnUniversity_idChanged();
    partial void OnAdmin_type_idChanging(int value);
    partial void OnAdmin_type_idChanged();
    partial void OnSerialNoChanging(System.Nullable<int> value);
    partial void OnSerialNoChanged();
    #endregion
		
		public Higher_Admin()
		{
			this._Higher_Admin_Type = default(EntityRef<Higher_Admin_Type>);
			this._University = default(EntityRef<University>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Admin_Name", DbType="NVarChar(MAX) NOT NULL", CanBeNull=false)]
		public string Admin_Name
		{
			get
			{
				return this._Admin_Name;
			}
			set
			{
				if ((this._Admin_Name != value))
				{
					this.OnAdmin_NameChanging(value);
					this.SendPropertyChanging();
					this._Admin_Name = value;
					this.SendPropertyChanged("Admin_Name");
					this.OnAdmin_NameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_National_ID", DbType="NVarChar(14) NOT NULL", CanBeNull=false)]
		public string National_ID
		{
			get
			{
				return this._National_ID;
			}
			set
			{
				if ((this._National_ID != value))
				{
					this.OnNational_IDChanging(value);
					this.SendPropertyChanging();
					this._National_ID = value;
					this.SendPropertyChanged("National_ID");
					this.OnNational_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Phone_Number", DbType="NVarChar(50)")]
		public string Phone_Number
		{
			get
			{
				return this._Phone_Number;
			}
			set
			{
				if ((this._Phone_Number != value))
				{
					this.OnPhone_NumberChanging(value);
					this.SendPropertyChanging();
					this._Phone_Number = value;
					this.SendPropertyChanged("Phone_Number");
					this.OnPhone_NumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Birth_Date", DbType="NVarChar(50)")]
		public string Birth_Date
		{
			get
			{
				return this._Birth_Date;
			}
			set
			{
				if ((this._Birth_Date != value))
				{
					this.OnBirth_DateChanging(value);
					this.SendPropertyChanging();
					this._Birth_Date = value;
					this.SendPropertyChanged("Birth_Date");
					this.OnBirth_DateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Birth_Place", DbType="NVarChar(MAX)")]
		public string Birth_Place
		{
			get
			{
				return this._Birth_Place;
			}
			set
			{
				if ((this._Birth_Place != value))
				{
					this.OnBirth_PlaceChanging(value);
					this.SendPropertyChanging();
					this._Birth_Place = value;
					this.SendPropertyChanged("Birth_Place");
					this.OnBirth_PlaceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Address", DbType="NVarChar(MAX)")]
		public string Address
		{
			get
			{
				return this._Address;
			}
			set
			{
				if ((this._Address != value))
				{
					this.OnAddressChanging(value);
					this.SendPropertyChanging();
					this._Address = value;
					this.SendPropertyChanged("Address");
					this.OnAddressChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Email", DbType="NVarChar(500)")]
		public string Email
		{
			get
			{
				return this._Email;
			}
			set
			{
				if ((this._Email != value))
				{
					this.OnEmailChanging(value);
					this.SendPropertyChanging();
					this._Email = value;
					this.SendPropertyChanged("Email");
					this.OnEmailChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Personal_Image", DbType="NVarChar(MAX)")]
		public string Personal_Image
		{
			get
			{
				return this._Personal_Image;
			}
			set
			{
				if ((this._Personal_Image != value))
				{
					this.OnPersonal_ImageChanging(value);
					this.SendPropertyChanging();
					this._Personal_Image = value;
					this.SendPropertyChanged("Personal_Image");
					this.OnPersonal_ImageChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_University_id", DbType="Int NOT NULL")]
		public int University_id
		{
			get
			{
				return this._University_id;
			}
			set
			{
				if ((this._University_id != value))
				{
					if (this._University.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnUniversity_idChanging(value);
					this.SendPropertyChanging();
					this._University_id = value;
					this.SendPropertyChanged("University_id");
					this.OnUniversity_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Admin_type_id", DbType="Int NOT NULL")]
		public int Admin_type_id
		{
			get
			{
				return this._Admin_type_id;
			}
			set
			{
				if ((this._Admin_type_id != value))
				{
					if (this._Higher_Admin_Type.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnAdmin_type_idChanging(value);
					this.SendPropertyChanging();
					this._Admin_type_id = value;
					this.SendPropertyChanged("Admin_type_id");
					this.OnAdmin_type_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SerialNo", DbType="Int")]
		public System.Nullable<int> SerialNo
		{
			get
			{
				return this._SerialNo;
			}
			set
			{
				if ((this._SerialNo != value))
				{
					this.OnSerialNoChanging(value);
					this.SendPropertyChanging();
					this._SerialNo = value;
					this.SendPropertyChanged("SerialNo");
					this.OnSerialNoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Higher_Admin_Type_Higher_Admin", Storage="_Higher_Admin_Type", ThisKey="Admin_type_id", OtherKey="ID", IsForeignKey=true)]
		public Higher_Admin_Type Higher_Admin_Type
		{
			get
			{
				return this._Higher_Admin_Type.Entity;
			}
			set
			{
				Higher_Admin_Type previousValue = this._Higher_Admin_Type.Entity;
				if (((previousValue != value) 
							|| (this._Higher_Admin_Type.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Higher_Admin_Type.Entity = null;
						previousValue.Higher_Admins.Remove(this);
					}
					this._Higher_Admin_Type.Entity = value;
					if ((value != null))
					{
						value.Higher_Admins.Add(this);
						this._Admin_type_id = value.ID;
					}
					else
					{
						this._Admin_type_id = default(int);
					}
					this.SendPropertyChanged("Higher_Admin_Type");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="University_Higher_Admin", Storage="_University", ThisKey="University_id", OtherKey="ID", IsForeignKey=true)]
		public University University
		{
			get
			{
				return this._University.Entity;
			}
			set
			{
				University previousValue = this._University.Entity;
				if (((previousValue != value) 
							|| (this._University.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._University.Entity = null;
						previousValue.Higher_Admins.Remove(this);
					}
					this._University.Entity = value;
					if ((value != null))
					{
						value.Higher_Admins.Add(this);
						this._University_id = value.ID;
					}
					else
					{
						this._University_id = default(int);
					}
					this.SendPropertyChanged("University");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Instructors")]
	public partial class Instructor : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private string _Inst_Name;
		
		private string _National_ID;
		
		private bool _Gender;
		
		private string _Birth_Date;
		
		private string _Birth_Place;
		
		private string _phone_no;
		
		private string _Email;
		
		private string _Address;
		
		private string _Personal_Image;
		
		private string _NatID_Image;
		
		private int _University_id;
		
		private int _Inst_type;
		
		private System.Nullable<int> _SerialNo;
		
		private System.Nullable<int> _FieldID;
		
		private EntityRef<Field> _Field;
		
		private EntityRef<Instructor_Type> _Instructor_Type;
		
		private EntityRef<University> _University;
		
		private EntityRef<Gender> _Gender1;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnInst_NameChanging(string value);
    partial void OnInst_NameChanged();
    partial void OnNational_IDChanging(string value);
    partial void OnNational_IDChanged();
    partial void OnGenderChanging(bool value);
    partial void OnGenderChanged();
    partial void OnBirth_DateChanging(string value);
    partial void OnBirth_DateChanged();
    partial void OnBirth_PlaceChanging(string value);
    partial void OnBirth_PlaceChanged();
    partial void Onphone_noChanging(string value);
    partial void Onphone_noChanged();
    partial void OnEmailChanging(string value);
    partial void OnEmailChanged();
    partial void OnAddressChanging(string value);
    partial void OnAddressChanged();
    partial void OnPersonal_ImageChanging(string value);
    partial void OnPersonal_ImageChanged();
    partial void OnNatID_ImageChanging(string value);
    partial void OnNatID_ImageChanged();
    partial void OnUniversity_idChanging(int value);
    partial void OnUniversity_idChanged();
    partial void OnInst_typeChanging(int value);
    partial void OnInst_typeChanged();
    partial void OnSerialNoChanging(System.Nullable<int> value);
    partial void OnSerialNoChanged();
    partial void OnFieldIDChanging(System.Nullable<int> value);
    partial void OnFieldIDChanged();
    #endregion
		
		public Instructor()
		{
			this._Field = default(EntityRef<Field>);
			this._Instructor_Type = default(EntityRef<Instructor_Type>);
			this._University = default(EntityRef<University>);
			this._Gender1 = default(EntityRef<Gender>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Inst_Name", DbType="NVarChar(500) NOT NULL", CanBeNull=false)]
		public string Inst_Name
		{
			get
			{
				return this._Inst_Name;
			}
			set
			{
				if ((this._Inst_Name != value))
				{
					this.OnInst_NameChanging(value);
					this.SendPropertyChanging();
					this._Inst_Name = value;
					this.SendPropertyChanged("Inst_Name");
					this.OnInst_NameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_National_ID", DbType="NVarChar(14) NOT NULL", CanBeNull=false)]
		public string National_ID
		{
			get
			{
				return this._National_ID;
			}
			set
			{
				if ((this._National_ID != value))
				{
					this.OnNational_IDChanging(value);
					this.SendPropertyChanging();
					this._National_ID = value;
					this.SendPropertyChanged("National_ID");
					this.OnNational_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Gender", DbType="Bit NOT NULL")]
		public bool Gender
		{
			get
			{
				return this._Gender;
			}
			set
			{
				if ((this._Gender != value))
				{
					if (this._Gender1.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnGenderChanging(value);
					this.SendPropertyChanging();
					this._Gender = value;
					this.SendPropertyChanged("Gender");
					this.OnGenderChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Birth_Date", DbType="NVarChar(50)")]
		public string Birth_Date
		{
			get
			{
				return this._Birth_Date;
			}
			set
			{
				if ((this._Birth_Date != value))
				{
					this.OnBirth_DateChanging(value);
					this.SendPropertyChanging();
					this._Birth_Date = value;
					this.SendPropertyChanged("Birth_Date");
					this.OnBirth_DateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Birth_Place", DbType="NVarChar(MAX)")]
		public string Birth_Place
		{
			get
			{
				return this._Birth_Place;
			}
			set
			{
				if ((this._Birth_Place != value))
				{
					this.OnBirth_PlaceChanging(value);
					this.SendPropertyChanging();
					this._Birth_Place = value;
					this.SendPropertyChanged("Birth_Place");
					this.OnBirth_PlaceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_phone_no", DbType="NVarChar(50)")]
		public string phone_no
		{
			get
			{
				return this._phone_no;
			}
			set
			{
				if ((this._phone_no != value))
				{
					this.Onphone_noChanging(value);
					this.SendPropertyChanging();
					this._phone_no = value;
					this.SendPropertyChanged("phone_no");
					this.Onphone_noChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Email", DbType="NVarChar(500)")]
		public string Email
		{
			get
			{
				return this._Email;
			}
			set
			{
				if ((this._Email != value))
				{
					this.OnEmailChanging(value);
					this.SendPropertyChanging();
					this._Email = value;
					this.SendPropertyChanged("Email");
					this.OnEmailChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Address", DbType="NVarChar(MAX)")]
		public string Address
		{
			get
			{
				return this._Address;
			}
			set
			{
				if ((this._Address != value))
				{
					this.OnAddressChanging(value);
					this.SendPropertyChanging();
					this._Address = value;
					this.SendPropertyChanged("Address");
					this.OnAddressChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Personal_Image", DbType="NVarChar(MAX)")]
		public string Personal_Image
		{
			get
			{
				return this._Personal_Image;
			}
			set
			{
				if ((this._Personal_Image != value))
				{
					this.OnPersonal_ImageChanging(value);
					this.SendPropertyChanging();
					this._Personal_Image = value;
					this.SendPropertyChanged("Personal_Image");
					this.OnPersonal_ImageChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NatID_Image", DbType="NVarChar(MAX)")]
		public string NatID_Image
		{
			get
			{
				return this._NatID_Image;
			}
			set
			{
				if ((this._NatID_Image != value))
				{
					this.OnNatID_ImageChanging(value);
					this.SendPropertyChanging();
					this._NatID_Image = value;
					this.SendPropertyChanged("NatID_Image");
					this.OnNatID_ImageChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_University_id", DbType="Int NOT NULL")]
		public int University_id
		{
			get
			{
				return this._University_id;
			}
			set
			{
				if ((this._University_id != value))
				{
					if (this._University.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnUniversity_idChanging(value);
					this.SendPropertyChanging();
					this._University_id = value;
					this.SendPropertyChanged("University_id");
					this.OnUniversity_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Inst_type", DbType="Int NOT NULL")]
		public int Inst_type
		{
			get
			{
				return this._Inst_type;
			}
			set
			{
				if ((this._Inst_type != value))
				{
					if (this._Instructor_Type.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnInst_typeChanging(value);
					this.SendPropertyChanging();
					this._Inst_type = value;
					this.SendPropertyChanged("Inst_type");
					this.OnInst_typeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SerialNo", DbType="Int")]
		public System.Nullable<int> SerialNo
		{
			get
			{
				return this._SerialNo;
			}
			set
			{
				if ((this._SerialNo != value))
				{
					this.OnSerialNoChanging(value);
					this.SendPropertyChanging();
					this._SerialNo = value;
					this.SendPropertyChanged("SerialNo");
					this.OnSerialNoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FieldID", DbType="Int")]
		public System.Nullable<int> FieldID
		{
			get
			{
				return this._FieldID;
			}
			set
			{
				if ((this._FieldID != value))
				{
					if (this._Field.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnFieldIDChanging(value);
					this.SendPropertyChanging();
					this._FieldID = value;
					this.SendPropertyChanged("FieldID");
					this.OnFieldIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Field_Instructor", Storage="_Field", ThisKey="FieldID", OtherKey="ID", IsForeignKey=true)]
		public Field Field
		{
			get
			{
				return this._Field.Entity;
			}
			set
			{
				Field previousValue = this._Field.Entity;
				if (((previousValue != value) 
							|| (this._Field.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Field.Entity = null;
						previousValue.Instructors.Remove(this);
					}
					this._Field.Entity = value;
					if ((value != null))
					{
						value.Instructors.Add(this);
						this._FieldID = value.ID;
					}
					else
					{
						this._FieldID = default(Nullable<int>);
					}
					this.SendPropertyChanged("Field");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Instructor_Type_Instructor", Storage="_Instructor_Type", ThisKey="Inst_type", OtherKey="ID", IsForeignKey=true)]
		public Instructor_Type Instructor_Type
		{
			get
			{
				return this._Instructor_Type.Entity;
			}
			set
			{
				Instructor_Type previousValue = this._Instructor_Type.Entity;
				if (((previousValue != value) 
							|| (this._Instructor_Type.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Instructor_Type.Entity = null;
						previousValue.Instructors.Remove(this);
					}
					this._Instructor_Type.Entity = value;
					if ((value != null))
					{
						value.Instructors.Add(this);
						this._Inst_type = value.ID;
					}
					else
					{
						this._Inst_type = default(int);
					}
					this.SendPropertyChanged("Instructor_Type");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="University_Instructor", Storage="_University", ThisKey="University_id", OtherKey="ID", IsForeignKey=true)]
		public University University
		{
			get
			{
				return this._University.Entity;
			}
			set
			{
				University previousValue = this._University.Entity;
				if (((previousValue != value) 
							|| (this._University.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._University.Entity = null;
						previousValue.Instructors.Remove(this);
					}
					this._University.Entity = value;
					if ((value != null))
					{
						value.Instructors.Add(this);
						this._University_id = value.ID;
					}
					else
					{
						this._University_id = default(int);
					}
					this.SendPropertyChanged("University");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Gender_Instructor", Storage="_Gender1", ThisKey="Gender", OtherKey="id", IsForeignKey=true)]
		public Gender Gender1
		{
			get
			{
				return this._Gender1.Entity;
			}
			set
			{
				Gender previousValue = this._Gender1.Entity;
				if (((previousValue != value) 
							|| (this._Gender1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Gender1.Entity = null;
						previousValue.Instructors.Remove(this);
					}
					this._Gender1.Entity = value;
					if ((value != null))
					{
						value.Instructors.Add(this);
						this._Gender = value.id;
					}
					else
					{
						this._Gender = default(bool);
					}
					this.SendPropertyChanged("Gender1");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Students")]
	public partial class Student : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private string _Stu_Name;
		
		private string _National_ID;
		
		private bool _Gender;
		
		private string _Birth_Date;
		
		private string _Birth_Place;
		
		private string _phone_no;
		
		private string _Email;
		
		private string _Address;
		
		private string _Personal_Image;
		
		private string _NatID_Image;
		
		private int _University_id;
		
		private int _Faculty_ID;
		
		private int _Year_ID;
		
		private int _Activity_id;
		
		private int _Field_id;
		
		private System.Nullable<int> _SerialNo;
		
		private EntityRef<Faculty> _Faculty;
		
		private EntityRef<Field> _Field;
		
		private EntityRef<University> _University;
		
		private EntityRef<Year> _Year;
		
		private EntityRef<Gender> _Gender1;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnStu_NameChanging(string value);
    partial void OnStu_NameChanged();
    partial void OnNational_IDChanging(string value);
    partial void OnNational_IDChanged();
    partial void OnGenderChanging(bool value);
    partial void OnGenderChanged();
    partial void OnBirth_DateChanging(string value);
    partial void OnBirth_DateChanged();
    partial void OnBirth_PlaceChanging(string value);
    partial void OnBirth_PlaceChanged();
    partial void Onphone_noChanging(string value);
    partial void Onphone_noChanged();
    partial void OnEmailChanging(string value);
    partial void OnEmailChanged();
    partial void OnAddressChanging(string value);
    partial void OnAddressChanged();
    partial void OnPersonal_ImageChanging(string value);
    partial void OnPersonal_ImageChanged();
    partial void OnNatID_ImageChanging(string value);
    partial void OnNatID_ImageChanged();
    partial void OnUniversity_idChanging(int value);
    partial void OnUniversity_idChanged();
    partial void OnFaculty_IDChanging(int value);
    partial void OnFaculty_IDChanged();
    partial void OnYear_IDChanging(int value);
    partial void OnYear_IDChanged();
    partial void OnActivity_idChanging(int value);
    partial void OnActivity_idChanged();
    partial void OnField_idChanging(int value);
    partial void OnField_idChanged();
    partial void OnSerialNoChanging(System.Nullable<int> value);
    partial void OnSerialNoChanged();
    #endregion
		
		public Student()
		{
			this._Faculty = default(EntityRef<Faculty>);
			this._Field = default(EntityRef<Field>);
			this._University = default(EntityRef<University>);
			this._Year = default(EntityRef<Year>);
			this._Gender1 = default(EntityRef<Gender>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Stu_Name", DbType="NVarChar(MAX) NOT NULL", CanBeNull=false)]
		public string Stu_Name
		{
			get
			{
				return this._Stu_Name;
			}
			set
			{
				if ((this._Stu_Name != value))
				{
					this.OnStu_NameChanging(value);
					this.SendPropertyChanging();
					this._Stu_Name = value;
					this.SendPropertyChanged("Stu_Name");
					this.OnStu_NameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_National_ID", DbType="NVarChar(14) NOT NULL", CanBeNull=false)]
		public string National_ID
		{
			get
			{
				return this._National_ID;
			}
			set
			{
				if ((this._National_ID != value))
				{
					this.OnNational_IDChanging(value);
					this.SendPropertyChanging();
					this._National_ID = value;
					this.SendPropertyChanged("National_ID");
					this.OnNational_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Gender", DbType="Bit NOT NULL")]
		public bool Gender
		{
			get
			{
				return this._Gender;
			}
			set
			{
				if ((this._Gender != value))
				{
					if (this._Gender1.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnGenderChanging(value);
					this.SendPropertyChanging();
					this._Gender = value;
					this.SendPropertyChanged("Gender");
					this.OnGenderChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Birth_Date", DbType="NVarChar(50)")]
		public string Birth_Date
		{
			get
			{
				return this._Birth_Date;
			}
			set
			{
				if ((this._Birth_Date != value))
				{
					this.OnBirth_DateChanging(value);
					this.SendPropertyChanging();
					this._Birth_Date = value;
					this.SendPropertyChanged("Birth_Date");
					this.OnBirth_DateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Birth_Place", DbType="NVarChar(MAX)")]
		public string Birth_Place
		{
			get
			{
				return this._Birth_Place;
			}
			set
			{
				if ((this._Birth_Place != value))
				{
					this.OnBirth_PlaceChanging(value);
					this.SendPropertyChanging();
					this._Birth_Place = value;
					this.SendPropertyChanged("Birth_Place");
					this.OnBirth_PlaceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_phone_no", DbType="NVarChar(50)")]
		public string phone_no
		{
			get
			{
				return this._phone_no;
			}
			set
			{
				if ((this._phone_no != value))
				{
					this.Onphone_noChanging(value);
					this.SendPropertyChanging();
					this._phone_no = value;
					this.SendPropertyChanged("phone_no");
					this.Onphone_noChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Email", DbType="NVarChar(500)")]
		public string Email
		{
			get
			{
				return this._Email;
			}
			set
			{
				if ((this._Email != value))
				{
					this.OnEmailChanging(value);
					this.SendPropertyChanging();
					this._Email = value;
					this.SendPropertyChanged("Email");
					this.OnEmailChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Address", DbType="NVarChar(MAX)")]
		public string Address
		{
			get
			{
				return this._Address;
			}
			set
			{
				if ((this._Address != value))
				{
					this.OnAddressChanging(value);
					this.SendPropertyChanging();
					this._Address = value;
					this.SendPropertyChanged("Address");
					this.OnAddressChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Personal_Image", DbType="NVarChar(MAX)")]
		public string Personal_Image
		{
			get
			{
				return this._Personal_Image;
			}
			set
			{
				if ((this._Personal_Image != value))
				{
					this.OnPersonal_ImageChanging(value);
					this.SendPropertyChanging();
					this._Personal_Image = value;
					this.SendPropertyChanged("Personal_Image");
					this.OnPersonal_ImageChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NatID_Image", DbType="NVarChar(MAX)")]
		public string NatID_Image
		{
			get
			{
				return this._NatID_Image;
			}
			set
			{
				if ((this._NatID_Image != value))
				{
					this.OnNatID_ImageChanging(value);
					this.SendPropertyChanging();
					this._NatID_Image = value;
					this.SendPropertyChanged("NatID_Image");
					this.OnNatID_ImageChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_University_id", DbType="Int NOT NULL")]
		public int University_id
		{
			get
			{
				return this._University_id;
			}
			set
			{
				if ((this._University_id != value))
				{
					if (this._University.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnUniversity_idChanging(value);
					this.SendPropertyChanging();
					this._University_id = value;
					this.SendPropertyChanged("University_id");
					this.OnUniversity_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Faculty_ID", DbType="Int NOT NULL")]
		public int Faculty_ID
		{
			get
			{
				return this._Faculty_ID;
			}
			set
			{
				if ((this._Faculty_ID != value))
				{
					if (this._Faculty.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnFaculty_IDChanging(value);
					this.SendPropertyChanging();
					this._Faculty_ID = value;
					this.SendPropertyChanged("Faculty_ID");
					this.OnFaculty_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Year_ID", DbType="Int NOT NULL")]
		public int Year_ID
		{
			get
			{
				return this._Year_ID;
			}
			set
			{
				if ((this._Year_ID != value))
				{
					if (this._Year.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnYear_IDChanging(value);
					this.SendPropertyChanging();
					this._Year_ID = value;
					this.SendPropertyChanged("Year_ID");
					this.OnYear_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Activity_id", DbType="Int NOT NULL")]
		public int Activity_id
		{
			get
			{
				return this._Activity_id;
			}
			set
			{
				if ((this._Activity_id != value))
				{
					this.OnActivity_idChanging(value);
					this.SendPropertyChanging();
					this._Activity_id = value;
					this.SendPropertyChanged("Activity_id");
					this.OnActivity_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Field_id", DbType="Int NOT NULL")]
		public int Field_id
		{
			get
			{
				return this._Field_id;
			}
			set
			{
				if ((this._Field_id != value))
				{
					if (this._Field.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnField_idChanging(value);
					this.SendPropertyChanging();
					this._Field_id = value;
					this.SendPropertyChanged("Field_id");
					this.OnField_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SerialNo", DbType="Int")]
		public System.Nullable<int> SerialNo
		{
			get
			{
				return this._SerialNo;
			}
			set
			{
				if ((this._SerialNo != value))
				{
					this.OnSerialNoChanging(value);
					this.SendPropertyChanging();
					this._SerialNo = value;
					this.SendPropertyChanged("SerialNo");
					this.OnSerialNoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Faculty_Student", Storage="_Faculty", ThisKey="Faculty_ID", OtherKey="ID", IsForeignKey=true)]
		public Faculty Faculty
		{
			get
			{
				return this._Faculty.Entity;
			}
			set
			{
				Faculty previousValue = this._Faculty.Entity;
				if (((previousValue != value) 
							|| (this._Faculty.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Faculty.Entity = null;
						previousValue.Students.Remove(this);
					}
					this._Faculty.Entity = value;
					if ((value != null))
					{
						value.Students.Add(this);
						this._Faculty_ID = value.ID;
					}
					else
					{
						this._Faculty_ID = default(int);
					}
					this.SendPropertyChanged("Faculty");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Field_Student", Storage="_Field", ThisKey="Field_id", OtherKey="ID", IsForeignKey=true)]
		public Field Field
		{
			get
			{
				return this._Field.Entity;
			}
			set
			{
				Field previousValue = this._Field.Entity;
				if (((previousValue != value) 
							|| (this._Field.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Field.Entity = null;
						previousValue.Students.Remove(this);
					}
					this._Field.Entity = value;
					if ((value != null))
					{
						value.Students.Add(this);
						this._Field_id = value.ID;
					}
					else
					{
						this._Field_id = default(int);
					}
					this.SendPropertyChanged("Field");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="University_Student", Storage="_University", ThisKey="University_id", OtherKey="ID", IsForeignKey=true)]
		public University University
		{
			get
			{
				return this._University.Entity;
			}
			set
			{
				University previousValue = this._University.Entity;
				if (((previousValue != value) 
							|| (this._University.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._University.Entity = null;
						previousValue.Students.Remove(this);
					}
					this._University.Entity = value;
					if ((value != null))
					{
						value.Students.Add(this);
						this._University_id = value.ID;
					}
					else
					{
						this._University_id = default(int);
					}
					this.SendPropertyChanged("University");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Year_Student", Storage="_Year", ThisKey="Year_ID", OtherKey="ID", IsForeignKey=true)]
		public Year Year
		{
			get
			{
				return this._Year.Entity;
			}
			set
			{
				Year previousValue = this._Year.Entity;
				if (((previousValue != value) 
							|| (this._Year.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Year.Entity = null;
						previousValue.Students.Remove(this);
					}
					this._Year.Entity = value;
					if ((value != null))
					{
						value.Students.Add(this);
						this._Year_ID = value.ID;
					}
					else
					{
						this._Year_ID = default(int);
					}
					this.SendPropertyChanged("Year");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Gender_Student", Storage="_Gender1", ThisKey="Gender", OtherKey="id", IsForeignKey=true)]
		public Gender Gender1
		{
			get
			{
				return this._Gender1.Entity;
			}
			set
			{
				Gender previousValue = this._Gender1.Entity;
				if (((previousValue != value) 
							|| (this._Gender1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Gender1.Entity = null;
						previousValue.Students.Remove(this);
					}
					this._Gender1.Entity = value;
					if ((value != null))
					{
						value.Students.Add(this);
						this._Gender = value.id;
					}
					else
					{
						this._Gender = default(bool);
					}
					this.SendPropertyChanged("Gender1");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Members")]
	public partial class Member : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private string _Member_Name;
		
		private string _National_ID;
		
		private string _Birth_Date;
		
		private string _Birth_Place;
		
		private string _phone_no;
		
		private string _Email;
		
		private string _Address;
		
		private string _Personal_Image;
		
		private string _NatID_Image;
		
		private int _University_id;
		
		private System.Nullable<int> _SerialNo;
		
		private EntityRef<University> _University;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnMember_NameChanging(string value);
    partial void OnMember_NameChanged();
    partial void OnNational_IDChanging(string value);
    partial void OnNational_IDChanged();
    partial void OnBirth_DateChanging(string value);
    partial void OnBirth_DateChanged();
    partial void OnBirth_PlaceChanging(string value);
    partial void OnBirth_PlaceChanged();
    partial void Onphone_noChanging(string value);
    partial void Onphone_noChanged();
    partial void OnEmailChanging(string value);
    partial void OnEmailChanged();
    partial void OnAddressChanging(string value);
    partial void OnAddressChanged();
    partial void OnPersonal_ImageChanging(string value);
    partial void OnPersonal_ImageChanged();
    partial void OnNatID_ImageChanging(string value);
    partial void OnNatID_ImageChanged();
    partial void OnUniversity_idChanging(int value);
    partial void OnUniversity_idChanged();
    partial void OnSerialNoChanging(System.Nullable<int> value);
    partial void OnSerialNoChanged();
    #endregion
		
		public Member()
		{
			this._University = default(EntityRef<University>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Member_Name", DbType="NVarChar(500) NOT NULL", CanBeNull=false)]
		public string Member_Name
		{
			get
			{
				return this._Member_Name;
			}
			set
			{
				if ((this._Member_Name != value))
				{
					this.OnMember_NameChanging(value);
					this.SendPropertyChanging();
					this._Member_Name = value;
					this.SendPropertyChanged("Member_Name");
					this.OnMember_NameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_National_ID", DbType="NVarChar(14) NOT NULL", CanBeNull=false)]
		public string National_ID
		{
			get
			{
				return this._National_ID;
			}
			set
			{
				if ((this._National_ID != value))
				{
					this.OnNational_IDChanging(value);
					this.SendPropertyChanging();
					this._National_ID = value;
					this.SendPropertyChanged("National_ID");
					this.OnNational_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Birth_Date", DbType="NVarChar(50)")]
		public string Birth_Date
		{
			get
			{
				return this._Birth_Date;
			}
			set
			{
				if ((this._Birth_Date != value))
				{
					this.OnBirth_DateChanging(value);
					this.SendPropertyChanging();
					this._Birth_Date = value;
					this.SendPropertyChanged("Birth_Date");
					this.OnBirth_DateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Birth_Place", DbType="NVarChar(MAX)")]
		public string Birth_Place
		{
			get
			{
				return this._Birth_Place;
			}
			set
			{
				if ((this._Birth_Place != value))
				{
					this.OnBirth_PlaceChanging(value);
					this.SendPropertyChanging();
					this._Birth_Place = value;
					this.SendPropertyChanged("Birth_Place");
					this.OnBirth_PlaceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_phone_no", DbType="NVarChar(50)")]
		public string phone_no
		{
			get
			{
				return this._phone_no;
			}
			set
			{
				if ((this._phone_no != value))
				{
					this.Onphone_noChanging(value);
					this.SendPropertyChanging();
					this._phone_no = value;
					this.SendPropertyChanged("phone_no");
					this.Onphone_noChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Email", DbType="NVarChar(500) NOT NULL", CanBeNull=false)]
		public string Email
		{
			get
			{
				return this._Email;
			}
			set
			{
				if ((this._Email != value))
				{
					this.OnEmailChanging(value);
					this.SendPropertyChanging();
					this._Email = value;
					this.SendPropertyChanged("Email");
					this.OnEmailChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Address", DbType="NVarChar(MAX)")]
		public string Address
		{
			get
			{
				return this._Address;
			}
			set
			{
				if ((this._Address != value))
				{
					this.OnAddressChanging(value);
					this.SendPropertyChanging();
					this._Address = value;
					this.SendPropertyChanged("Address");
					this.OnAddressChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Personal_Image", DbType="NVarChar(MAX)")]
		public string Personal_Image
		{
			get
			{
				return this._Personal_Image;
			}
			set
			{
				if ((this._Personal_Image != value))
				{
					this.OnPersonal_ImageChanging(value);
					this.SendPropertyChanging();
					this._Personal_Image = value;
					this.SendPropertyChanged("Personal_Image");
					this.OnPersonal_ImageChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NatID_Image", DbType="NVarChar(MAX)")]
		public string NatID_Image
		{
			get
			{
				return this._NatID_Image;
			}
			set
			{
				if ((this._NatID_Image != value))
				{
					this.OnNatID_ImageChanging(value);
					this.SendPropertyChanging();
					this._NatID_Image = value;
					this.SendPropertyChanged("NatID_Image");
					this.OnNatID_ImageChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_University_id", DbType="Int NOT NULL")]
		public int University_id
		{
			get
			{
				return this._University_id;
			}
			set
			{
				if ((this._University_id != value))
				{
					if (this._University.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnUniversity_idChanging(value);
					this.SendPropertyChanging();
					this._University_id = value;
					this.SendPropertyChanged("University_id");
					this.OnUniversity_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SerialNo", DbType="Int")]
		public System.Nullable<int> SerialNo
		{
			get
			{
				return this._SerialNo;
			}
			set
			{
				if ((this._SerialNo != value))
				{
					this.OnSerialNoChanging(value);
					this.SendPropertyChanging();
					this._SerialNo = value;
					this.SendPropertyChanged("SerialNo");
					this.OnSerialNoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="University_Member", Storage="_University", ThisKey="University_id", OtherKey="ID", IsForeignKey=true)]
		public University University
		{
			get
			{
				return this._University.Entity;
			}
			set
			{
				University previousValue = this._University.Entity;
				if (((previousValue != value) 
							|| (this._University.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._University.Entity = null;
						previousValue.Members.Remove(this);
					}
					this._University.Entity = value;
					if ((value != null))
					{
						value.Members.Add(this);
						this._University_id = value.ID;
					}
					else
					{
						this._University_id = default(int);
					}
					this.SendPropertyChanged("University");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Gender")]
	public partial class Gender : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private bool _id;
		
		private string _gender1;
		
		private EntitySet<Companion> _Companions;
		
		private EntitySet<General_Instructor> _General_Instructors;
		
		private EntitySet<Instructor> _Instructors;
		
		private EntitySet<Student> _Students;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(bool value);
    partial void OnidChanged();
    partial void Ongender1Changing(string value);
    partial void Ongender1Changed();
    #endregion
		
		public Gender()
		{
			this._Companions = new EntitySet<Companion>(new Action<Companion>(this.attach_Companions), new Action<Companion>(this.detach_Companions));
			this._General_Instructors = new EntitySet<General_Instructor>(new Action<General_Instructor>(this.attach_General_Instructors), new Action<General_Instructor>(this.detach_General_Instructors));
			this._Instructors = new EntitySet<Instructor>(new Action<Instructor>(this.attach_Instructors), new Action<Instructor>(this.detach_Instructors));
			this._Students = new EntitySet<Student>(new Action<Student>(this.attach_Students), new Action<Student>(this.detach_Students));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", DbType="Bit NOT NULL", IsPrimaryKey=true)]
		public bool id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="gender", Storage="_gender1", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string gender1
		{
			get
			{
				return this._gender1;
			}
			set
			{
				if ((this._gender1 != value))
				{
					this.Ongender1Changing(value);
					this.SendPropertyChanging();
					this._gender1 = value;
					this.SendPropertyChanged("gender1");
					this.Ongender1Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Gender_Companion", Storage="_Companions", ThisKey="id", OtherKey="Gender")]
		public EntitySet<Companion> Companions
		{
			get
			{
				return this._Companions;
			}
			set
			{
				this._Companions.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Gender_General_Instructor", Storage="_General_Instructors", ThisKey="id", OtherKey="Gender")]
		public EntitySet<General_Instructor> General_Instructors
		{
			get
			{
				return this._General_Instructors;
			}
			set
			{
				this._General_Instructors.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Gender_Instructor", Storage="_Instructors", ThisKey="id", OtherKey="Gender")]
		public EntitySet<Instructor> Instructors
		{
			get
			{
				return this._Instructors;
			}
			set
			{
				this._Instructors.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Gender_Student", Storage="_Students", ThisKey="id", OtherKey="Gender")]
		public EntitySet<Student> Students
		{
			get
			{
				return this._Students;
			}
			set
			{
				this._Students.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Companions(Companion entity)
		{
			this.SendPropertyChanging();
			entity.Gender1 = this;
		}
		
		private void detach_Companions(Companion entity)
		{
			this.SendPropertyChanging();
			entity.Gender1 = null;
		}
		
		private void attach_General_Instructors(General_Instructor entity)
		{
			this.SendPropertyChanging();
			entity.Gender1 = this;
		}
		
		private void detach_General_Instructors(General_Instructor entity)
		{
			this.SendPropertyChanging();
			entity.Gender1 = null;
		}
		
		private void attach_Instructors(Instructor entity)
		{
			this.SendPropertyChanging();
			entity.Gender1 = this;
		}
		
		private void detach_Instructors(Instructor entity)
		{
			this.SendPropertyChanging();
			entity.Gender1 = null;
		}
		
		private void attach_Students(Student entity)
		{
			this.SendPropertyChanging();
			entity.Gender1 = this;
		}
		
		private void detach_Students(Student entity)
		{
			this.SendPropertyChanging();
			entity.Gender1 = null;
		}
	}
}
#pragma warning restore 1591
